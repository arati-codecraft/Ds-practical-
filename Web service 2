PalindromeWSApplication:
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package org.me.palindrome;

import javax.jws.WebService;
import javax.jws.WebMethod;
import javax.jws.WebParam;

/**
 *
 * @author dadas
 */
@WebService(serviceName = "PalindromeWS")
public class PalindromeWS {

    /**
     * Web service operation
     */
    @WebMethod(operationName = "checkPalindrome")
    public boolean checkPalindrome(@WebParam(name = "text") String text) {
       String cleanText = text.replaceAll("[^a-zA-Z0-9]", "").toLowerCase();
    String reversed = new StringBuilder(cleanText).reverse().toString();
    return cleanText.equals(reversed);
    }
}

PalindromeWS_Client_Application:
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package palindromews_client_application;

public class PalindromeWS_Client_Application {

    public static void main(String[] args) {
        try {
            String inputText = "madam";
            boolean result = isPalindrome(inputText);
            System.out.println("Is \"" + inputText + "\" a palindrome? " + result);
        } catch (Exception ex) {
            System.out.println("Exception: " + ex);
        }
    }

    private static boolean isPalindrome(java.lang.String text) {
        org.me.palindrome.PalindromeWS_Service service = new org.me.palindrome.PalindromeWS_Service();
        org.me.palindrome.PalindromeWS port = service.getPalindromeWSPort();
        return port.checkPalindrome(text);
    }
}

PalindromeWSServletClient:
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package org.me.palindrome.client;

import java.io.IOException;
import java.io.PrintWriter;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.xml.ws.WebServiceRef;
import org.me.palindrome.PalindromeWS_Service;

/**
 *
 * @author dadas
 */
@WebServlet(name = "ClientServlet", urlPatterns = {"/ClientServlet"})
public class ClientServlet extends HttpServlet {
    @WebServiceRef(wsdlLocation = "WEB-INF/wsdl/localhost_8080/PalindromeWSApplication/PalindromeWS.wsdl")
    private PalindromeWS_Service service;

    /**
     * Processes requests for both HTTP <code>GET</code> and <code>POST</code>
     * methods.
     *
     * @param request servlet request
     * @param response servlet response
     * @throws ServletException if a servlet-specific error occurs
     * @throws IOException if an I/O error occurs
     */
    protected void processRequest(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        response.setContentType("text/html;charset=UTF-8");
        try (PrintWriter out = response.getWriter()) {
            /* TODO output your page here. You may use following sample code. */
            out.println("<!DOCTYPE html>");
            out.println("<html>");
            out.println("<head>");
            out.println("<title>Servlet ClientServlet</title>");            
            out.println("</head>");
            out.println("<body>");
            out.println("<h1>Servlet ClientServlet at " + request.getContextPath() + "</h1>");
            try {
    String inputText = "madam";
    boolean result = checkPalindrome(inputText);
    out.println("Is \"" + inputText + "\" a palindrome? " + result);
} catch (Exception ex) {
    out.println("Exception: " + ex);
}

            out.println("</body>");
            out.println("</html>");
        }
    }

    // <editor-fold defaultstate="collapsed" desc="HttpServlet methods. Click on the + sign on the left to edit the code.">
    /**
     * Handles the HTTP <code>GET</code> method.
     *
     * @param request servlet request
     * @param response servlet response
     * @throws ServletException if a servlet-specific error occurs
     * @throws IOException if an I/O error occurs
     */
    @Override
    protected void doGet(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        processRequest(request, response);
    }

    /**
     * Handles the HTTP <code>POST</code> method.
     *
     * @param request servlet request
     * @param response servlet response
     * @throws ServletException if a servlet-specific error occurs
     * @throws IOException if an I/O error occurs
     */
    @Override
    protected void doPost(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        processRequest(request, response);
    }

    /**
     * Returns a short description of the servlet.
     *
     * @return a String containing servlet description
     */
    @Override
    public String getServletInfo() {
        return "Short description";
    }// </editor-fold>

    private static boolean checkPalindrome(java.lang.String text) {
    org.me.palindrome.PalindromeWS_Service service = new org.me.palindrome.PalindromeWS_Service();
    org.me.palindrome.PalindromeWS port = service.getPalindromeWSPort();
    return port.checkPalindrome(text);
    }
}

PalindromeWSJSPClient:

<%@page contentType="text/html" pageEncoding="UTF-8"%>
<!DOCTYPE html>
<html>
    <head>
        <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
        <title>JSP Page</title>
    </head>
    <body>
        <h1>Hello World!</h1>
            <%-- start web service invocation --%><hr/>
    <%
    try {
	org.me.palindrome.PalindromeWS_Service service = new org.me.palindrome.PalindromeWS_Service();
	org.me.palindrome.PalindromeWS port = service.getPalindromeWSPort();
	 // TODO initialize WS operation arguments here
	java.lang.String text = "madam";
	// TODO process result here
	boolean result = port.checkPalindrome(text);
	out.println("Input Text: " + text + "<br>");
        out.println("Is Palindrome? " + result);
    } catch (Exception ex) {
	// TODO handle custom exceptions here
        out.println("Exception: " + ex.getMessage());

    }
    %>
    <%-- end web service invocation --%><hr/>

    </body>
</html>
